name: Build and deploy .NET Core application to Function App func-linux-brickshoarder-dev
on:
  workflow_dispatch:
  push:
    paths:
      - 'src/BricksHoarder.Backend/FunctionApp4/**'      
env:
  AZURE_FUNCTIONAPP_NAME: 'func-linux-brickshoarder-dev'   
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './published'
  WORKING_DIRECTORY: ./src/BricksHoarder.Backend/FunctionApp4
  DOTNET_VERSION: '7.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    #environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup DotNet Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
      
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration Release --no-restore

    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration Release --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"

    - name: Playwright install
      shell: bash
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        PLAYWRIGHT_BROWSERS_PATH=$HOME/pw-browsers
        playwright -p ${{ env.WORKING_DIRECTORY }} install chromium

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: functionapp
        path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
